package org.greenbean;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;

import org.greenbean.annotations.NotNull;
import org.greenbean.annotations.PrimaryKey;
import org.greenbean.annotations.Table;
import org.greenbean.util.Log;

public class _TestGreenBean
{
	public static void main(String[] args) throws Exception
	{
      Connection conn = createConnection();
      ResultSet rs=conn.getMetaData().getTables(null, "greenbean", "%", null);

      while(rs.next())
      {
         Log.info(rs.getString("TABLE_NAME"));
      }

      rs = conn.getMetaData().getColumns(null, "greenbean", "test", "%");

      while(rs.next())
      {
         Log.info(rs.getString("COLUMN_NAME"));
         Log.info(rs.getString("TYPE_NAME"));
      }
      
      System.exit(1);
	   
      PersistenceManager pm = new PersistenceManager(conn);
		pm.store(new TestData());
	}

	private static Connection createConnection() throws ClassNotFoundException, SQLException
	{
		Class.forName("com.mysql.jdbc.Driver");
		String url = "jdbc:mysql://localhost:3306/greenbean";
		return DriverManager.getConnection(url, "greenbean", "gr33nb3an");

	}

	@SuppressWarnings("unused")
	private static class BaseTestData 
	{
		private static final String ST_F        = "STATIC_FINAL";
		private String              str         = "Some string";
		private boolean             bool        = true;
		private int                 someInt     = 213423423;
		private Integer             someInteger = new Integer(23423432);
		private Date                date        = new Date();

		private transient String    temp        = "I am temp!";

		private TestEnum            enm         = TestEnum.VALUE1;

		private String              longText    = "For example, a VARCHAR(255) column can hold a string with a maximum length of 255 characters. Assuming that the column uses the latin1 character set (one byte per character), the actual storage required is the length of the string (L), plus one byte to record the length of the string. For the string 'abcd', L is 4 and the storage requirement is five bytes. If the same column is instead declared to use the ucs2 double-byte character set, the storage requirement is 10 bytes: The length of 'abcd'  is eight bytes and the column requires two bytes to store lengths because the maximum length is greater than 255 (up to 510 bytes).";
	}

	@Table(name = "test_data")
	@SuppressWarnings("unused")
	private static class TestData extends BaseTestData
	{
		@NotNull @PrimaryKey
		private String decField = "I am declared!";
		
		@PrimaryKey
		private int primary=2;
	}

	private enum TestEnum
	{
		VALUE1, VALUE2, VALUE3
	}
}
